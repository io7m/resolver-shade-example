<?xml version="1.0" encoding="UTF-8"?>
<project
  xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>com.io7m.primogenitor</groupId>
    <artifactId>com.io7m.primogenitor</artifactId>
    <version>2.0.0</version>
  </parent>

  <groupId>com.io7m.resolver</groupId>
  <artifactId>com.io7m.resolver</artifactId>
  <version>0.0.1</version>

  <packaging>jar</packaging>
  <name>com.io7m.resolver0</name>
  <description>MigLayout experimentation</description>
  <url>http://github.com/io7m/resolver</url>

  <properties>
    <io7m.checkstyle.artifact>com.io7m.resolver0.checkstyle</io7m.checkstyle.artifact>
    <io7m.checkstyle.path>/com/io7m/resolver/checkstyle/checkstyle.xml</io7m.checkstyle.path>
    <io7m.api.previousVersion>0.0.1</io7m.api.previousVersion>

    <!-- Temporarily work around a lack of JDK 9 compatibility -->
    <mdep.analyze.skip>true</mdep.analyze.skip>
  </properties>

  <licenses>
    <license>
      <name>ISC License</name>
      <url>http://io7m.com/license/isc.txt</url>
    </license>
  </licenses>

  <scm>
    <url>https://github.com/io7m/resolver</url>
    <connection>scm:git:https://github.com/io7m/resolver</connection>
    <developerConnection>scm:git:https://github.com/io7m/resolver</developerConnection>
  </scm>

  <developers>
    <developer>
      <id>io7m</id>
      <name>io7m</name>
      <email>code@io7m.com</email>
      <url>http://io7m.com</url>
    </developer>
  </developers>

  <issueManagement>
    <url>http://github.com/io7m/resolver/issues</url>
    <system>GitHub Issues</system>
  </issueManagement>

  <distributionManagement>
    <site>
      <id>GitHub</id>
      <name>GitHub</name>
      <url>http://io7m.github.io/resolver</url>
    </site>
    <repository>
      <id>sonatype-nexus-staging</id>
      <url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
    </repository>
    <snapshotRepository>
      <id>sonatype-nexus-snapshots</id>
      <url>https://oss.sonatype.org/content/repositories/snapshots/</url>
    </snapshotRepository>
  </distributionManagement>

  <ciManagement>
    <system>Travis CI</system>
    <url>https://travis-ci.org/io7m/resolver</url>
  </ciManagement>

  <prerequisites>
    <maven>3.0.4</maven>
  </prerequisites>

  <dependencies>
    <dependency>
      <groupId>org.apache.maven.resolver</groupId>
      <artifactId>maven-resolver-api</artifactId>
      <version>1.1.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.resolver</groupId>
      <artifactId>maven-resolver-impl</artifactId>
      <version>1.1.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.resolver</groupId>
      <artifactId>maven-resolver-transport-http</artifactId>
      <version>1.1.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.resolver</groupId>
      <artifactId>maven-resolver-connector-basic</artifactId>
      <version>1.1.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-resolver-provider</artifactId>
      <version>3.5.2</version>
    </dependency>

    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <version>1.2.3</version>
    </dependency>
  </dependencies>

  <build>
    <pluginManagement>
      <plugins>

        <!-- Add the java-extra directory to the build               -->
        <!-- This contains a module descriptor that must be compiled -->
        <!-- separately due to shading of dependencies.              -->
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>build-helper-maven-plugin</artifactId>
          <version>${io7m.build-helper-maven-plugin.version}</version>
          <executions>
            <execution>
              <id>add-sources</id>
              <phase>compile</phase>
              <goals>
                <goal>add-source</goal>
              </goals>
              <configuration>
                <sources>
                  <source>src/main/java-extra</source>
                </sources>
              </configuration>
            </execution>
          </executions>
        </plugin>

        <!-- Require JDK >= 9 -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <configuration>
            <source>9</source>
            <target>9</target>
            <release>9</release>
          </configuration>

          <executions>

            <!-- Compile the real sources. -->
            <execution>
              <id>default-compile</id>
              <goals>
                <goal>compile</goal>
              </goals>
              <phase>compile</phase>
              <configuration>
                <excludes>
                  <exclude>module-info.java</exclude>
                  <exclude>com/io7m/resolver/Stub.java</exclude>
                </excludes>
              </configuration>
            </execution>

            <!-- Compile the module descriptor against a fake module. -->
            <execution>
              <id>compile-extra</id>
              <goals>
                <goal>compile</goal>
              </goals>
              <phase>compile</phase>
              <configuration>
                <excludes>
                  <exclude>com/io7m/resolver/Main.java</exclude>
                </excludes>
              </configuration>
            </execution>
          </executions>
        </plugin>
      </plugins>
    </pluginManagement>

    <plugins>

      <!-- Produce a shaded module. -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-shade-plugin</artifactId>
        <version>${io7m.maven-shade-plugin.version}</version>

        <executions>
          <execution>
            <id>shaded-jar</id>
            <phase>package</phase>
            <goals>
              <goal>shade</goal>
            </goals>
            <configuration>
              <transformers>
                <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                  <mainClass>com.io7m.resolver.Main</mainClass>
                </transformer>
              </transformers>

              <minimizeJar>true</minimizeJar>

              <artifactSet>
                <includes>
                  <include>com.google.guava:guava</include>
                  <include>org.apache.commons:commons-lang3</include>
                  <include>commons-codec:commons-codec</include>
                  <include>org.apache.maven.resolver:*</include>
                  <include>org.apache.maven:*</include>
                  <include>org.apache.httpcomponents:*</include>
                  <include>javax.inject:javax.inject</include>
                  <include>org.codehaus.plexus:*</include>
                  <include>org.slf4j:jcl-over-slf4j</include>
                </includes>
              </artifactSet>

              <relocations>
                <relocation>
                  <pattern>com.google</pattern>
                  <shadedPattern>com.io7m.resolver.internal.com.google</shadedPattern>
                  <includes>
                    <include>com.google.**</include>
                  </includes>
                </relocation>

                <relocation>
                  <pattern>org.codehaus.plexus</pattern>
                  <shadedPattern>com.io7m.resolver.internal.org.codehaus.plexus</shadedPattern>
                  <includes>
                    <include>org.codehaus.plexus.**</include>
                  </includes>
                </relocation>

                <relocation>
                  <pattern>org.apache</pattern>
                  <shadedPattern>com.io7m.resolver.internal.org.apache</shadedPattern>
                  <includes>
                    <include>org.apache.**</include>
                  </includes>
                </relocation>

                <relocation>
                  <pattern>javax.inject</pattern>
                  <shadedPattern>com.io7m.resolver.internal.javax.inject</shadedPattern>
                  <includes>
                    <include>javax.inject.**</include>
                  </includes>
                </relocation>

                <relocation>
                  <pattern>org.eclipse.aether</pattern>
                  <shadedPattern>com.io7m.resolver.internal.org.eclipse.aether</shadedPattern>
                  <includes>
                    <include>org.eclipse.aether.**</include>
                  </includes>
                </relocation>

                <relocation>
                  <pattern>licenses</pattern>
                  <shadedPattern>com.io7m.resolver.internal.licenses</shadedPattern>
                  <includes>
                    <include>licenses.**</include>
                  </includes>
                </relocation>

                <relocation>
                  <pattern>mozilla</pattern>
                  <shadedPattern>com.io7m.resolver.internal.mozilla</shadedPattern>
                  <includes>
                    <include>mozilla.**</include>
                  </includes>
                </relocation>
              </relocations>

            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- Copy the separately compiled module-info.class into the shaded jar -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>truezip-maven-plugin</artifactId>
        <version>${io7m.truezip-maven-plugin.version}</version>
        <executions>
          <execution>
            <id>add-module-info</id>
            <phase>package</phase>
            <goals>
              <goal>copy</goal>
            </goals>
            <configuration>
              <verbose>true</verbose>
              <fileset>
                <directory>${project.build.directory}/classes</directory>
                <includes>
                  <include>module-info.class</include>
                </includes>
                <outputDirectory>${project.build.directory}/${project.artifactId}-${project.version}.jar/</outputDirectory>
              </fileset>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- Make all jars reproducible. -->
      <plugin>
        <groupId>io.github.zlika</groupId>
        <artifactId>reproducible-build-maven-plugin</artifactId>
        <version>${io7m.reproducible-build-maven-plugin.version}</version>
      </plugin>
    </plugins>
  </build>

</project>
